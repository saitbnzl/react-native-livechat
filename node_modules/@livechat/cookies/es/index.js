var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

import find from 'lodash/fp/find';
import trimStart from 'lodash/fp/trimStart';

export var get = function get(key) {
	var cookies = document.cookie.split(';');
	var found = find(function (cookie) {
		var _trimStart$split = trimStart(cookie).split('='),
		    cookieName = _trimStart$split[0];

		return decodeURIComponent(cookieName) === key;
	}, cookies);
	return found ? decodeURIComponent(found.split('=')[1]) : null;
};

export var set = function set(key, value) {
	var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

	var days = options.days;
	var expires = days ? '; expires=' + new Date(Date.now() + days * 24 * 60 * 60 * 1000).toUTCString() : '';
	var path = options.path ? '; path=' + options.path : '';
	var stringifiedValue = (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' ? JSON.stringify(value) : String(value);
	var cookie = encodeURIComponent(key) + '=' + encodeURIComponent(stringifiedValue);
	document.cookie = '' + cookie + expires + path;
};

export var remove = function remove(key) {
	return set(key, '', { days: -1 });
};