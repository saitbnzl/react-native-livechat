'use strict';

exports.__esModule = true;
exports.decodeQueryString = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.fetchTicketForm = fetchTicketForm;
exports.default = _callee;

var _effects = require('redux-saga/effects');

var _sortBy = require('lodash/fp/sortBy');

var _sortBy2 = _interopRequireDefault(_sortBy);

var _omit = require('lodash/fp/omit');

var _omit2 = _interopRequireDefault(_omit);

var _compose = require('lodash/fp/compose');

var _compose2 = _interopRequireDefault(_compose);

var _fromPairs = require('lodash/fp/fromPairs');

var _fromPairs2 = _interopRequireDefault(_fromPairs);

var _map = require('lodash/fp/map');

var _map2 = _interopRequireDefault(_map);

var _split = require('lodash/fp/split');

var _split2 = _interopRequireDefault(_split);

var _partialRight = require('lodash/fp/partialRight');

var _partialRight2 = _interopRequireDefault(_partialRight);

var _trimStart = require('lodash/fp/trimStart');

var _trimStart2 = _interopRequireDefault(_trimStart);

var _storage = require('../utils/storage');

var _storage2 = _interopRequireDefault(_storage);

var _reducers = require('../reducers');

var _chatActions = require('../actions/chatActions');

var chatActions = _interopRequireWildcard(_chatActions);

var _propsActions = require('../actions/propsActions');

var _propsActions2 = _interopRequireDefault(_propsActions);

var _serverRequest = require('../utils/serverRequest');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _marked = /*#__PURE__*/regeneratorRuntime.mark(fetchTicketForm),
    _marked2 = /*#__PURE__*/regeneratorRuntime.mark(setInitialVisitorData),
    _marked3 = /*#__PURE__*/regeneratorRuntime.mark(_callee);

// TODO: replace with separate package version
var decodeQueryString = exports.decodeQueryString = (0, _compose2.default)(_fromPairs2.default, (0, _map2.default)((0, _compose2.default)((0, _map2.default)(decodeURIComponent), (0, _split2.default)('='))), (0, _split2.default)('&'), (0, _partialRight2.default)(_trimStart2.default.convert({ fixed: false }), ['?']));

var getDynamicConfig = function getDynamicConfig(requestData) {
	return (0, _serverRequest.sendPostToWebserv)('get_dynamic_config.js', _extends({}, requestData, {
		body: {}
	}));
};

var getStaticConfig = function getStaticConfig(staticConfigVersion, requestData) {
	return (0, _serverRequest.sendPostToWebserv)('get_static_config.' + requestData.group + '.' + staticConfigVersion + '.js', _extends({}, requestData, {
		body: {}
	}));
};

function fetchTicketForm() {
	var license, group, environment, staticConfigVersion, staticConfigResponse, omitOrder, ticketFormFields;
	return regeneratorRuntime.wrap(function fetchTicketForm$(_context) {
		while (1) {
			switch (_context.prev = _context.next) {
				case 0:
					_context.next = 2;
					return (0, _effects.select)(_reducers.propsSelectors.getPropertyLicense);

				case 2:
					license = _context.sent;
					_context.next = 5;
					return (0, _effects.select)(_reducers.propsSelectors.getPropertyGroup);

				case 5:
					group = _context.sent;
					_context.next = 8;
					return (0, _effects.select)(_reducers.getEnvironment);

				case 8:
					environment = _context.sent;
					_context.next = 11;
					return (0, _effects.select)(_reducers.propsSelectors.getPropertyStaticConfigVersion);

				case 11:
					staticConfigVersion = _context.sent;
					_context.next = 14;
					return (0, _effects.call)(getStaticConfig, staticConfigVersion, {
						environment: environment,
						license: license,
						group: group
					});

				case 14:
					staticConfigResponse = _context.sent;
					omitOrder = (0, _omit2.default)('order');
					ticketFormFields = (0, _sortBy2.default)('order', staticConfigResponse.offline_form.fields).map(omitOrder);
					_context.next = 19;
					return (0, _effects.put)(_propsActions2.default.setPropertyTicketForm(ticketFormFields));

				case 19:
				case 'end':
					return _context.stop();
			}
		}
	}, _marked, this);
}

function setInitialVisitorData(dynamicConfigResponse) {
	var visitorData, visitorId, visitorDataToSet;
	return regeneratorRuntime.wrap(function setInitialVisitorData$(_context2) {
		while (1) {
			switch (_context2.prev = _context2.next) {
				case 0:
					_context2.next = 2;
					return (0, _effects.select)(_reducers.getVisitorData);

				case 2:
					visitorData = _context2.sent;
					_context2.next = 5;
					return (0, _effects.select)(_reducers.propsSelectors.getPropertyVisitorId);

				case 5:
					visitorId = _context2.sent;
					visitorDataToSet = _extends({}, visitorData);
					_context2.next = 9;
					return (0, _effects.put)(_propsActions2.default.setPropertyStaticConfigVersion(dynamicConfigResponse.static_config_version));

				case 9:
					if (dynamicConfigResponse.visitor.nick) {
						visitorDataToSet.name = dynamicConfigResponse.visitor.nick;
					}
					if (dynamicConfigResponse.visitor.params) {
						visitorDataToSet.customProperties = _extends({}, visitorDataToSet.customParams, decodeQueryString(dynamicConfigResponse.visitor.params));
					}

					if (!(dynamicConfigResponse.visitor.nick || dynamicConfigResponse.visitor.params)) {
						_context2.next = 14;
						break;
					}

					_context2.next = 14;
					return (0, _effects.put)(chatActions.setVisitorData({
						visitorData: visitorDataToSet
					}));

				case 14:
					if (visitorId) {
						_context2.next = 18;
						break;
					}

					_context2.next = 17;
					return (0, _effects.put)(_propsActions2.default.setPropertyVisitorId(dynamicConfigResponse.visitor.session));

				case 17:
					_storage2.default.setItem('visitorId', dynamicConfigResponse.visitor.session);

				case 18:
				case 'end':
					return _context2.stop();
			}
		}
	}, _marked2, this);
}

function _callee() {
	var license, group, environment, dynamicConfigResponse;
	return regeneratorRuntime.wrap(function _callee$(_context3) {
		while (1) {
			switch (_context3.prev = _context3.next) {
				case 0:
					_context3.next = 2;
					return (0, _effects.select)(_reducers.propsSelectors.getPropertyLicense);

				case 2:
					license = _context3.sent;
					_context3.next = 5;
					return (0, _effects.select)(_reducers.propsSelectors.getPropertyGroup);

				case 5:
					group = _context3.sent;
					_context3.next = 8;
					return (0, _effects.select)(_reducers.getEnvironment);

				case 8:
					environment = _context3.sent;
					_context3.next = 11;
					return (0, _effects.call)(getDynamicConfig, {
						environment: environment,
						license: license,
						group: group
					});

				case 11:
					dynamicConfigResponse = _context3.sent;
					_context3.next = 14;
					return (0, _effects.call)(setInitialVisitorData, dynamicConfigResponse);

				case 14:
				case 'end':
					return _context3.stop();
			}
		}
	}, _marked3, this);
}